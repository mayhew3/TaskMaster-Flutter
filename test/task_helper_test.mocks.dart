// Mocks generated by Mockito 5.4.4 from annotations
// in taskmaster/test/task_helper_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i21;
import 'dart:ui' as _i31;

import 'package:built_collection/built_collection.dart' as _i6;
import 'package:cloud_firestore/cloud_firestore.dart' as _i3;
import 'package:flutter/foundation.dart' as _i18;
import 'package:flutter/material.dart' as _i17;
import 'package:flutter/scheduler.dart' as _i19;
import 'package:flutter_local_notifications/flutter_local_notifications.dart'
    as _i10;
import 'package:google_sign_in/google_sign_in.dart' as _i14;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i30;
import 'package:redux/src/store.dart' as _i29;
import 'package:taskmaster/models/data_payload.dart' as _i4;
import 'package:taskmaster/models/models.dart' as _i13;
import 'package:taskmaster/models/snooze.dart' as _i9;
import 'package:taskmaster/models/snooze_blueprint.dart' as _i27;
import 'package:taskmaster/models/sprint.dart' as _i7;
import 'package:taskmaster/models/sprint_assignment.dart' as _i24;
import 'package:taskmaster/models/sprint_blueprint.dart' as _i25;
import 'package:taskmaster/models/task_item.dart' as _i5;
import 'package:taskmaster/models/task_item_blueprint.dart' as _i22;
import 'package:taskmaster/models/task_item_recur_preview.dart' as _i23;
import 'package:taskmaster/models/task_recurrence.dart' as _i8;
import 'package:taskmaster/models/task_recurrence_blueprint.dart' as _i26;
import 'package:taskmaster/models/top_nav_item.dart' as _i12;
import 'package:taskmaster/redux/app_state.dart' as _i16;
import 'package:taskmaster/redux/middleware/notification_helper.dart' as _i15;
import 'package:taskmaster/task_repository.dart' as _i20;
import 'package:taskmaster/timezone_helper.dart' as _i11;
import 'package:taskmaster/typedefs.dart' as _i28;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseFirestore_1 extends _i1.SmartFake
    implements _i3.FirebaseFirestore {
  _FakeFirebaseFirestore_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDataPayload_2 extends _i1.SmartFake implements _i4.DataPayload {
  _FakeDataPayload_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTaskItem_3 extends _i1.SmartFake implements _i5.TaskItem {
  _FakeTaskItem_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBuiltList_4<E> extends _i1.SmartFake implements _i6.BuiltList<E> {
  _FakeBuiltList_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSprint_5 extends _i1.SmartFake implements _i7.Sprint {
  _FakeSprint_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTaskRecurrence_6 extends _i1.SmartFake
    implements _i8.TaskRecurrence {
  _FakeTaskRecurrence_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSnooze_7 extends _i1.SmartFake implements _i9.Snooze {
  _FakeSnooze_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUri_8 extends _i1.SmartFake implements Uri {
  _FakeUri_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFlutterLocalNotificationsPlugin_9 extends _i1.SmartFake
    implements _i10.FlutterLocalNotificationsPlugin {
  _FakeFlutterLocalNotificationsPlugin_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTimezoneHelper_10 extends _i1.SmartFake
    implements _i11.TimezoneHelper {
  _FakeTimezoneHelper_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTopNavItem_11 extends _i1.SmartFake implements _i12.TopNavItem {
  _FakeTopNavItem_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeVisibilityFilter_12 extends _i1.SmartFake
    implements _i13.VisibilityFilter {
  _FakeVisibilityFilter_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGoogleSignIn_13 extends _i1.SmartFake implements _i14.GoogleSignIn {
  _FakeGoogleSignIn_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNotificationHelper_14 extends _i1.SmartFake
    implements _i15.NotificationHelper {
  _FakeNotificationHelper_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAppState_15 extends _i1.SmartFake implements _i16.AppState {
  _FakeAppState_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAppStateBuilder_16 extends _i1.SmartFake
    implements _i16.AppStateBuilder {
  _FakeAppStateBuilder_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFocusNode_17 extends _i1.SmartFake implements _i17.FocusNode {
  _FakeFocusNode_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString(
          {_i17.DiagnosticLevel? minLevel = _i17.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeValueNotifier_18<T> extends _i1.SmartFake
    implements _i17.ValueNotifier<T> {
  _FakeValueNotifier_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNavigator_19 extends _i1.SmartFake implements _i17.Navigator {
  _FakeNavigator_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString(
          {_i17.DiagnosticLevel? minLevel = _i17.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeBuildContext_20 extends _i1.SmartFake implements _i17.BuildContext {
  _FakeBuildContext_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWidget_21 extends _i1.SmartFake implements _i17.Widget {
  _FakeWidget_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString(
          {_i17.DiagnosticLevel? minLevel = _i17.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeDiagnosticsNode_22 extends _i1.SmartFake
    implements _i17.DiagnosticsNode {
  _FakeDiagnosticsNode_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({
    _i18.TextTreeConfiguration? parentConfiguration,
    _i17.DiagnosticLevel? minLevel = _i17.DiagnosticLevel.info,
  }) =>
      super.toString();
}

class _FakeTicker_23 extends _i1.SmartFake implements _i19.Ticker {
  _FakeTicker_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({bool? debugIncludeStack = false}) => super.toString();
}

/// A class which mocks [TaskRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTaskRepository extends _i1.Mock implements _i20.TaskRepository {
  @override
  _i2.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
        returnValueForMissingStub: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Client);

  @override
  _i3.FirebaseFirestore get firestore => (super.noSuchMethod(
        Invocation.getter(#firestore),
        returnValue: _FakeFirebaseFirestore_1(
          this,
          Invocation.getter(#firestore),
        ),
        returnValueForMissingStub: _FakeFirebaseFirestore_1(
          this,
          Invocation.getter(#firestore),
        ),
      ) as _i3.FirebaseFirestore);

  @override
  _i21.Future<String?> getPersonIdFromFirestore(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPersonIdFromFirestore,
          [email],
        ),
        returnValue: _i21.Future<String?>.value(),
        returnValueForMissingStub: _i21.Future<String?>.value(),
      ) as _i21.Future<String?>);

  @override
  void goOffline() => super.noSuchMethod(
        Invocation.method(
          #goOffline,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void goOnline() => super.noSuchMethod(
        Invocation.method(
          #goOnline,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i21.Future<_i4.DataPayload> loadTasksFromFirestore(String? personDocId) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadTasksFromFirestore,
          [personDocId],
        ),
        returnValue: _i21.Future<_i4.DataPayload>.value(_FakeDataPayload_2(
          this,
          Invocation.method(
            #loadTasksFromFirestore,
            [personDocId],
          ),
        )),
        returnValueForMissingStub:
            _i21.Future<_i4.DataPayload>.value(_FakeDataPayload_2(
          this,
          Invocation.method(
            #loadTasksFromFirestore,
            [personDocId],
          ),
        )),
      ) as _i21.Future<_i4.DataPayload>);

  @override
  _i21.Future<
      ({_i8.TaskRecurrence? recurrence, _i5.TaskItem taskItem})> addTask(
    _i22.TaskItemBlueprint? blueprint,
    String? idToken,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTask,
          [
            blueprint,
            idToken,
          ],
        ),
        returnValue: _i21.Future<
            ({_i8.TaskRecurrence? recurrence, _i5.TaskItem taskItem})>.value((
          recurrence: null,
          taskItem: _FakeTaskItem_3(
            this,
            Invocation.method(
              #addTask,
              [
                blueprint,
                idToken,
              ],
            ),
          )
        )),
        returnValueForMissingStub: _i21.Future<
            ({_i8.TaskRecurrence? recurrence, _i5.TaskItem taskItem})>.value((
          recurrence: null,
          taskItem: _FakeTaskItem_3(
            this,
            Invocation.method(
              #addTask,
              [
                blueprint,
                idToken,
              ],
            ),
          )
        )),
      ) as _i21
          .Future<({_i8.TaskRecurrence? recurrence, _i5.TaskItem taskItem})>);

  @override
  _i21.Future<
      ({_i8.TaskRecurrence? recurrence, _i5.TaskItem taskItem})> addRecurTask(
    _i23.TaskItemRecurPreview? blueprint,
    String? idToken,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addRecurTask,
          [
            blueprint,
            idToken,
          ],
        ),
        returnValue: _i21.Future<
            ({_i8.TaskRecurrence? recurrence, _i5.TaskItem taskItem})>.value((
          recurrence: null,
          taskItem: _FakeTaskItem_3(
            this,
            Invocation.method(
              #addRecurTask,
              [
                blueprint,
                idToken,
              ],
            ),
          )
        )),
        returnValueForMissingStub: _i21.Future<
            ({_i8.TaskRecurrence? recurrence, _i5.TaskItem taskItem})>.value((
          recurrence: null,
          taskItem: _FakeTaskItem_3(
            this,
            Invocation.method(
              #addRecurTask,
              [
                blueprint,
                idToken,
              ],
            ),
          )
        )),
      ) as _i21
          .Future<({_i8.TaskRecurrence? recurrence, _i5.TaskItem taskItem})>);

  @override
  _i21.Future<
      ({_i8.TaskRecurrence? recurrence, _i5.TaskItem taskItem})> updateTask(
    String? taskItemId,
    _i22.TaskItemBlueprint? taskItemBlueprint,
    String? idToken,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTask,
          [
            taskItemId,
            taskItemBlueprint,
            idToken,
          ],
        ),
        returnValue: _i21.Future<
            ({_i8.TaskRecurrence? recurrence, _i5.TaskItem taskItem})>.value((
          recurrence: null,
          taskItem: _FakeTaskItem_3(
            this,
            Invocation.method(
              #updateTask,
              [
                taskItemId,
                taskItemBlueprint,
                idToken,
              ],
            ),
          )
        )),
        returnValueForMissingStub: _i21.Future<
            ({_i8.TaskRecurrence? recurrence, _i5.TaskItem taskItem})>.value((
          recurrence: null,
          taskItem: _FakeTaskItem_3(
            this,
            Invocation.method(
              #updateTask,
              [
                taskItemId,
                taskItemBlueprint,
                idToken,
              ],
            ),
          )
        )),
      ) as _i21
          .Future<({_i8.TaskRecurrence? recurrence, _i5.TaskItem taskItem})>);

  @override
  _i21.Future<
      ({
        _i6.BuiltList<_i5.TaskItem> addedTasks,
        _i7.Sprint sprint,
        _i6.BuiltList<_i24.SprintAssignment> sprintAssignments
      })> addSprintWithTaskItems(
    _i25.SprintBlueprint? blueprint,
    _i6.BuiltList<_i5.TaskItem>? existingItems,
    _i6.BuiltList<_i23.TaskItemRecurPreview>? newItems,
    String? idToken,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSprintWithTaskItems,
          [
            blueprint,
            existingItems,
            newItems,
            idToken,
          ],
        ),
        returnValue: _i21.Future<
            ({
              _i6.BuiltList<_i5.TaskItem> addedTasks,
              _i7.Sprint sprint,
              _i6.BuiltList<_i24.SprintAssignment> sprintAssignments
            })>.value((
          addedTasks: _FakeBuiltList_4<_i5.TaskItem>(
            this,
            Invocation.method(
              #addSprintWithTaskItems,
              [
                blueprint,
                existingItems,
                newItems,
                idToken,
              ],
            ),
          ),
          sprint: _FakeSprint_5(
            this,
            Invocation.method(
              #addSprintWithTaskItems,
              [
                blueprint,
                existingItems,
                newItems,
                idToken,
              ],
            ),
          ),
          sprintAssignments: _FakeBuiltList_4<_i24.SprintAssignment>(
            this,
            Invocation.method(
              #addSprintWithTaskItems,
              [
                blueprint,
                existingItems,
                newItems,
                idToken,
              ],
            ),
          )
        )),
        returnValueForMissingStub: _i21.Future<
            ({
              _i6.BuiltList<_i5.TaskItem> addedTasks,
              _i7.Sprint sprint,
              _i6.BuiltList<_i24.SprintAssignment> sprintAssignments
            })>.value((
          addedTasks: _FakeBuiltList_4<_i5.TaskItem>(
            this,
            Invocation.method(
              #addSprintWithTaskItems,
              [
                blueprint,
                existingItems,
                newItems,
                idToken,
              ],
            ),
          ),
          sprint: _FakeSprint_5(
            this,
            Invocation.method(
              #addSprintWithTaskItems,
              [
                blueprint,
                existingItems,
                newItems,
                idToken,
              ],
            ),
          ),
          sprintAssignments: _FakeBuiltList_4<_i24.SprintAssignment>(
            this,
            Invocation.method(
              #addSprintWithTaskItems,
              [
                blueprint,
                existingItems,
                newItems,
                idToken,
              ],
            ),
          )
        )),
      ) as _i21.Future<
          ({
            _i6.BuiltList<_i5.TaskItem> addedTasks,
            _i7.Sprint sprint,
            _i6.BuiltList<_i24.SprintAssignment> sprintAssignments
          })>);

  @override
  _i21.Future<_i8.TaskRecurrence> addTaskRecurrence(
    _i26.TaskRecurrenceBlueprint? blueprint,
    String? idToken,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTaskRecurrence,
          [
            blueprint,
            idToken,
          ],
        ),
        returnValue:
            _i21.Future<_i8.TaskRecurrence>.value(_FakeTaskRecurrence_6(
          this,
          Invocation.method(
            #addTaskRecurrence,
            [
              blueprint,
              idToken,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i21.Future<_i8.TaskRecurrence>.value(_FakeTaskRecurrence_6(
          this,
          Invocation.method(
            #addTaskRecurrence,
            [
              blueprint,
              idToken,
            ],
          ),
        )),
      ) as _i21.Future<_i8.TaskRecurrence>);

  @override
  _i21.Future<_i8.TaskRecurrence> updateTaskRecurrence(
    int? taskRecurrenceId,
    _i26.TaskRecurrenceBlueprint? blueprint,
    String? idToken,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTaskRecurrence,
          [
            taskRecurrenceId,
            blueprint,
            idToken,
          ],
        ),
        returnValue:
            _i21.Future<_i8.TaskRecurrence>.value(_FakeTaskRecurrence_6(
          this,
          Invocation.method(
            #updateTaskRecurrence,
            [
              taskRecurrenceId,
              blueprint,
              idToken,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i21.Future<_i8.TaskRecurrence>.value(_FakeTaskRecurrence_6(
          this,
          Invocation.method(
            #updateTaskRecurrence,
            [
              taskRecurrenceId,
              blueprint,
              idToken,
            ],
          ),
        )),
      ) as _i21.Future<_i8.TaskRecurrence>);

  @override
  _i21.Future<
      ({
        _i6.BuiltList<_i5.TaskItem> addedTasks,
        _i6.BuiltList<_i24.SprintAssignment> sprintAssignments
      })> addTasksToSprint(
    _i6.BuiltList<_i5.TaskItem>? taskItems,
    _i6.BuiltList<_i23.TaskItemRecurPreview>? taskItemRecurPreviews,
    _i7.Sprint? sprint,
    String? idToken,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTasksToSprint,
          [
            taskItems,
            taskItemRecurPreviews,
            sprint,
            idToken,
          ],
        ),
        returnValue: _i21.Future<
            ({
              _i6.BuiltList<_i5.TaskItem> addedTasks,
              _i6.BuiltList<_i24.SprintAssignment> sprintAssignments
            })>.value((
          addedTasks: _FakeBuiltList_4<_i5.TaskItem>(
            this,
            Invocation.method(
              #addTasksToSprint,
              [
                taskItems,
                taskItemRecurPreviews,
                sprint,
                idToken,
              ],
            ),
          ),
          sprintAssignments: _FakeBuiltList_4<_i24.SprintAssignment>(
            this,
            Invocation.method(
              #addTasksToSprint,
              [
                taskItems,
                taskItemRecurPreviews,
                sprint,
                idToken,
              ],
            ),
          )
        )),
        returnValueForMissingStub: _i21.Future<
            ({
              _i6.BuiltList<_i5.TaskItem> addedTasks,
              _i6.BuiltList<_i24.SprintAssignment> sprintAssignments
            })>.value((
          addedTasks: _FakeBuiltList_4<_i5.TaskItem>(
            this,
            Invocation.method(
              #addTasksToSprint,
              [
                taskItems,
                taskItemRecurPreviews,
                sprint,
                idToken,
              ],
            ),
          ),
          sprintAssignments: _FakeBuiltList_4<_i24.SprintAssignment>(
            this,
            Invocation.method(
              #addTasksToSprint,
              [
                taskItems,
                taskItemRecurPreviews,
                sprint,
                idToken,
              ],
            ),
          )
        )),
      ) as _i21.Future<
          ({
            _i6.BuiltList<_i5.TaskItem> addedTasks,
            _i6.BuiltList<_i24.SprintAssignment> sprintAssignments
          })>);

  @override
  _i21.Future<void> deleteTask(
    _i5.TaskItem? taskItem,
    String? idToken,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTask,
          [
            taskItem,
            idToken,
          ],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);

  @override
  _i21.Future<_i9.Snooze> addSnooze(
    _i27.SnoozeBlueprint? snooze,
    String? idToken,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSnooze,
          [
            snooze,
            idToken,
          ],
        ),
        returnValue: _i21.Future<_i9.Snooze>.value(_FakeSnooze_7(
          this,
          Invocation.method(
            #addSnooze,
            [
              snooze,
              idToken,
            ],
          ),
        )),
        returnValueForMissingStub: _i21.Future<_i9.Snooze>.value(_FakeSnooze_7(
          this,
          Invocation.method(
            #addSnooze,
            [
              snooze,
              idToken,
            ],
          ),
        )),
      ) as _i21.Future<_i9.Snooze>);

  @override
  Uri getUriWithParameters(
    String? path,
    Map<String, dynamic>? queryParameters,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUriWithParameters,
          [
            path,
            queryParameters,
          ],
        ),
        returnValue: _FakeUri_8(
          this,
          Invocation.method(
            #getUriWithParameters,
            [
              path,
              queryParameters,
            ],
          ),
        ),
        returnValueForMissingStub: _FakeUri_8(
          this,
          Invocation.method(
            #getUriWithParameters,
            [
              path,
              queryParameters,
            ],
          ),
        ),
      ) as Uri);

  @override
  Uri getUri(String? path) => (super.noSuchMethod(
        Invocation.method(
          #getUri,
          [path],
        ),
        returnValue: _FakeUri_8(
          this,
          Invocation.method(
            #getUri,
            [path],
          ),
        ),
        returnValueForMissingStub: _FakeUri_8(
          this,
          Invocation.method(
            #getUri,
            [path],
          ),
        ),
      ) as Uri);

  @override
  _i21.Future<dynamic> executeGetApiAction({
    required String? uriString,
    Map<String, Object>? queryParameters,
    required String? idToken,
    required String? operationDescription,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #executeGetApiAction,
          [],
          {
            #uriString: uriString,
            #queryParameters: queryParameters,
            #idToken: idToken,
            #operationDescription: operationDescription,
          },
        ),
        returnValue: _i21.Future<dynamic>.value(),
        returnValueForMissingStub: _i21.Future<dynamic>.value(),
      ) as _i21.Future<dynamic>);

  @override
  _i21.Future<void> migrateFromApi(String? idToken) => (super.noSuchMethod(
        Invocation.method(
          #migrateFromApi,
          [idToken],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);

  @override
  _i21.Future<dynamic> executeBodyApiAction({
    required _i28.BodyApiOperation? bodyApiOperation,
    required Map<String, Object?>? payload,
    required String? uriString,
    Map<String, Object>? queryParameters,
    required String? idToken,
    required String? operationDescription,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #executeBodyApiAction,
          [],
          {
            #bodyApiOperation: bodyApiOperation,
            #payload: payload,
            #uriString: uriString,
            #queryParameters: queryParameters,
            #idToken: idToken,
            #operationDescription: operationDescription,
          },
        ),
        returnValue: _i21.Future<dynamic>.value(),
        returnValueForMissingStub: _i21.Future<dynamic>.value(),
      ) as _i21.Future<dynamic>);

  @override
  _i21.Future<void> executeDeleteApiAction({
    required String? uriString,
    Map<String, Object>? queryParameters,
    required String? idToken,
    required String? operationDescription,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #executeDeleteApiAction,
          [],
          {
            #uriString: uriString,
            #queryParameters: queryParameters,
            #idToken: idToken,
            #operationDescription: operationDescription,
          },
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
}

/// A class which mocks [Store].
///
/// See the documentation for Mockito's code generation for more information.
class MockStore<State> extends _i1.Mock implements _i29.Store<State> {
  @override
  _i29.Reducer<State> get reducer => (super.noSuchMethod(
        Invocation.getter(#reducer),
        returnValue: (
          State state,
          dynamic action,
        ) =>
            _i30.dummyValue<State>(
          this,
          Invocation.getter(#reducer),
        ),
        returnValueForMissingStub: (
          State state,
          dynamic action,
        ) =>
            _i30.dummyValue<State>(
          this,
          Invocation.getter(#reducer),
        ),
      ) as _i29.Reducer<State>);

  @override
  set reducer(_i29.Reducer<State>? _reducer) => super.noSuchMethod(
        Invocation.setter(
          #reducer,
          _reducer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  State get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i30.dummyValue<State>(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _i30.dummyValue<State>(
          this,
          Invocation.getter(#state),
        ),
      ) as State);

  @override
  _i21.Stream<State> get onChange => (super.noSuchMethod(
        Invocation.getter(#onChange),
        returnValue: _i21.Stream<State>.empty(),
        returnValueForMissingStub: _i21.Stream<State>.empty(),
      ) as _i21.Stream<State>);

  @override
  _i21.Future<dynamic> teardown() => (super.noSuchMethod(
        Invocation.method(
          #teardown,
          [],
        ),
        returnValue: _i21.Future<dynamic>.value(),
        returnValueForMissingStub: _i21.Future<dynamic>.value(),
      ) as _i21.Future<dynamic>);
}

/// A class which mocks [NotificationHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationHelper extends _i1.Mock
    implements _i15.NotificationHelper {
  @override
  int get nextId => (super.noSuchMethod(
        Invocation.getter(#nextId),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  set nextId(int? _nextId) => super.noSuchMethod(
        Invocation.setter(
          #nextId,
          _nextId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.FlutterLocalNotificationsPlugin get plugin => (super.noSuchMethod(
        Invocation.getter(#plugin),
        returnValue: _FakeFlutterLocalNotificationsPlugin_9(
          this,
          Invocation.getter(#plugin),
        ),
        returnValueForMissingStub: _FakeFlutterLocalNotificationsPlugin_9(
          this,
          Invocation.getter(#plugin),
        ),
      ) as _i10.FlutterLocalNotificationsPlugin);

  @override
  _i11.TimezoneHelper get timezoneHelper => (super.noSuchMethod(
        Invocation.getter(#timezoneHelper),
        returnValue: _FakeTimezoneHelper_10(
          this,
          Invocation.getter(#timezoneHelper),
        ),
        returnValueForMissingStub: _FakeTimezoneHelper_10(
          this,
          Invocation.getter(#timezoneHelper),
        ),
      ) as _i11.TimezoneHelper);

  @override
  _i21.Future<void> cancelAllNotifications() => (super.noSuchMethod(
        Invocation.method(
          #cancelAllNotifications,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);

  @override
  _i21.Future<void> cancelNotificationsForTaskId(String? taskId) =>
      (super.noSuchMethod(
        Invocation.method(
          #cancelNotificationsForTaskId,
          [taskId],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);

  @override
  _i21.Future<void> syncNotificationForTasksAndSprint(
    List<_i5.TaskItem>? taskItems,
    _i7.Sprint? sprint,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #syncNotificationForTasksAndSprint,
          [
            taskItems,
            sprint,
          ],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);

  @override
  _i21.Future<void> updateNotificationForTask(_i5.TaskItem? taskItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateNotificationForTask,
          [taskItem],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
}

/// A class which mocks [AppState].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppState extends _i1.Mock implements _i16.AppState {
  @override
  _i6.BuiltList<_i5.TaskItem> get taskItems => (super.noSuchMethod(
        Invocation.getter(#taskItems),
        returnValue: _FakeBuiltList_4<_i5.TaskItem>(
          this,
          Invocation.getter(#taskItems),
        ),
        returnValueForMissingStub: _FakeBuiltList_4<_i5.TaskItem>(
          this,
          Invocation.getter(#taskItems),
        ),
      ) as _i6.BuiltList<_i5.TaskItem>);

  @override
  _i6.BuiltList<_i7.Sprint> get sprints => (super.noSuchMethod(
        Invocation.getter(#sprints),
        returnValue: _FakeBuiltList_4<_i7.Sprint>(
          this,
          Invocation.getter(#sprints),
        ),
        returnValueForMissingStub: _FakeBuiltList_4<_i7.Sprint>(
          this,
          Invocation.getter(#sprints),
        ),
      ) as _i6.BuiltList<_i7.Sprint>);

  @override
  _i6.BuiltList<_i8.TaskRecurrence> get taskRecurrences => (super.noSuchMethod(
        Invocation.getter(#taskRecurrences),
        returnValue: _FakeBuiltList_4<_i8.TaskRecurrence>(
          this,
          Invocation.getter(#taskRecurrences),
        ),
        returnValueForMissingStub: _FakeBuiltList_4<_i8.TaskRecurrence>(
          this,
          Invocation.getter(#taskRecurrences),
        ),
      ) as _i6.BuiltList<_i8.TaskRecurrence>);

  @override
  bool get tasksLoading => (super.noSuchMethod(
        Invocation.getter(#tasksLoading),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get sprintsLoading => (super.noSuchMethod(
        Invocation.getter(#sprintsLoading),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get taskRecurrencesLoading => (super.noSuchMethod(
        Invocation.getter(#taskRecurrencesLoading),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get loadFailed => (super.noSuchMethod(
        Invocation.getter(#loadFailed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i6.BuiltList<_i5.TaskItem> get recentlyCompleted => (super.noSuchMethod(
        Invocation.getter(#recentlyCompleted),
        returnValue: _FakeBuiltList_4<_i5.TaskItem>(
          this,
          Invocation.getter(#recentlyCompleted),
        ),
        returnValueForMissingStub: _FakeBuiltList_4<_i5.TaskItem>(
          this,
          Invocation.getter(#recentlyCompleted),
        ),
      ) as _i6.BuiltList<_i5.TaskItem>);

  @override
  _i12.TopNavItem get activeTab => (super.noSuchMethod(
        Invocation.getter(#activeTab),
        returnValue: _FakeTopNavItem_11(
          this,
          Invocation.getter(#activeTab),
        ),
        returnValueForMissingStub: _FakeTopNavItem_11(
          this,
          Invocation.getter(#activeTab),
        ),
      ) as _i12.TopNavItem);

  @override
  _i6.BuiltList<_i12.TopNavItem> get allNavItems => (super.noSuchMethod(
        Invocation.getter(#allNavItems),
        returnValue: _FakeBuiltList_4<_i12.TopNavItem>(
          this,
          Invocation.getter(#allNavItems),
        ),
        returnValueForMissingStub: _FakeBuiltList_4<_i12.TopNavItem>(
          this,
          Invocation.getter(#allNavItems),
        ),
      ) as _i6.BuiltList<_i12.TopNavItem>);

  @override
  _i13.VisibilityFilter get sprintListFilter => (super.noSuchMethod(
        Invocation.getter(#sprintListFilter),
        returnValue: _FakeVisibilityFilter_12(
          this,
          Invocation.getter(#sprintListFilter),
        ),
        returnValueForMissingStub: _FakeVisibilityFilter_12(
          this,
          Invocation.getter(#sprintListFilter),
        ),
      ) as _i13.VisibilityFilter);

  @override
  _i13.VisibilityFilter get taskListFilter => (super.noSuchMethod(
        Invocation.getter(#taskListFilter),
        returnValue: _FakeVisibilityFilter_12(
          this,
          Invocation.getter(#taskListFilter),
        ),
        returnValueForMissingStub: _FakeVisibilityFilter_12(
          this,
          Invocation.getter(#taskListFilter),
        ),
      ) as _i13.VisibilityFilter);

  @override
  _i14.GoogleSignIn get googleSignIn => (super.noSuchMethod(
        Invocation.getter(#googleSignIn),
        returnValue: _FakeGoogleSignIn_13(
          this,
          Invocation.getter(#googleSignIn),
        ),
        returnValueForMissingStub: _FakeGoogleSignIn_13(
          this,
          Invocation.getter(#googleSignIn),
        ),
      ) as _i14.GoogleSignIn);

  @override
  bool get tokenRetrieved => (super.noSuchMethod(
        Invocation.getter(#tokenRetrieved),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get offlineMode => (super.noSuchMethod(
        Invocation.getter(#offlineMode),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i11.TimezoneHelper get timezoneHelper => (super.noSuchMethod(
        Invocation.getter(#timezoneHelper),
        returnValue: _FakeTimezoneHelper_10(
          this,
          Invocation.getter(#timezoneHelper),
        ),
        returnValueForMissingStub: _FakeTimezoneHelper_10(
          this,
          Invocation.getter(#timezoneHelper),
        ),
      ) as _i11.TimezoneHelper);

  @override
  int get nextId => (super.noSuchMethod(
        Invocation.getter(#nextId),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  _i15.NotificationHelper get notificationHelper => (super.noSuchMethod(
        Invocation.getter(#notificationHelper),
        returnValue: _FakeNotificationHelper_14(
          this,
          Invocation.getter(#notificationHelper),
        ),
        returnValueForMissingStub: _FakeNotificationHelper_14(
          this,
          Invocation.getter(#notificationHelper),
        ),
      ) as _i15.NotificationHelper);

  @override
  _i21.Future<String?> getIdToken() => (super.noSuchMethod(
        Invocation.method(
          #getIdToken,
          [],
        ),
        returnValue: _i21.Future<String?>.value(),
        returnValueForMissingStub: _i21.Future<String?>.value(),
      ) as _i21.Future<String?>);

  @override
  bool isAuthenticated() => (super.noSuchMethod(
        Invocation.method(
          #isAuthenticated,
          [],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool appIsReady() => (super.noSuchMethod(
        Invocation.method(
          #appIsReady,
          [],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i16.AppState rebuild(dynamic Function(_i16.AppStateBuilder)? updates) =>
      (super.noSuchMethod(
        Invocation.method(
          #rebuild,
          [updates],
        ),
        returnValue: _FakeAppState_15(
          this,
          Invocation.method(
            #rebuild,
            [updates],
          ),
        ),
        returnValueForMissingStub: _FakeAppState_15(
          this,
          Invocation.method(
            #rebuild,
            [updates],
          ),
        ),
      ) as _i16.AppState);

  @override
  _i16.AppStateBuilder toBuilder() => (super.noSuchMethod(
        Invocation.method(
          #toBuilder,
          [],
        ),
        returnValue: _FakeAppStateBuilder_16(
          this,
          Invocation.method(
            #toBuilder,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeAppStateBuilder_16(
          this,
          Invocation.method(
            #toBuilder,
            [],
          ),
        ),
      ) as _i16.AppStateBuilder);
}

/// A class which mocks [GlobalKey].
///
/// See the documentation for Mockito's code generation for more information.
class MockGlobalKey extends _i1.Mock
    implements _i17.GlobalKey<_i17.NavigatorState> {}

/// A class which mocks [NavigatorState].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigatorState extends _i1.Mock implements _i17.NavigatorState {
  @override
  _i17.FocusNode get focusNode => (super.noSuchMethod(
        Invocation.getter(#focusNode),
        returnValue: _FakeFocusNode_17(
          this,
          Invocation.getter(#focusNode),
        ),
        returnValueForMissingStub: _FakeFocusNode_17(
          this,
          Invocation.getter(#focusNode),
        ),
      ) as _i17.FocusNode);

  @override
  _i17.ValueNotifier<bool> get userGestureInProgressNotifier =>
      (super.noSuchMethod(
        Invocation.getter(#userGestureInProgressNotifier),
        returnValue: _FakeValueNotifier_18<bool>(
          this,
          Invocation.getter(#userGestureInProgressNotifier),
        ),
        returnValueForMissingStub: _FakeValueNotifier_18<bool>(
          this,
          Invocation.getter(#userGestureInProgressNotifier),
        ),
      ) as _i17.ValueNotifier<bool>);

  @override
  bool get userGestureInProgress => (super.noSuchMethod(
        Invocation.getter(#userGestureInProgress),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i17.Navigator get widget => (super.noSuchMethod(
        Invocation.getter(#widget),
        returnValue: _FakeNavigator_19(
          this,
          Invocation.getter(#widget),
        ),
        returnValueForMissingStub: _FakeNavigator_19(
          this,
          Invocation.getter(#widget),
        ),
      ) as _i17.Navigator);

  @override
  _i17.BuildContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeBuildContext_20(
          this,
          Invocation.getter(#context),
        ),
        returnValueForMissingStub: _FakeBuildContext_20(
          this,
          Invocation.getter(#context),
        ),
      ) as _i17.BuildContext);

  @override
  bool get mounted => (super.noSuchMethod(
        Invocation.getter(#mounted),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get restorePending => (super.noSuchMethod(
        Invocation.getter(#restorePending),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void initState() => super.noSuchMethod(
        Invocation.method(
          #initState,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void restoreState(
    _i17.RestorationBucket? oldBucket,
    bool? initialRestore,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #restoreState,
          [
            oldBucket,
            initialRestore,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didToggleBucket(_i17.RestorationBucket? oldBucket) => super.noSuchMethod(
        Invocation.method(
          #didToggleBucket,
          [oldBucket],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didChangeDependencies() => super.noSuchMethod(
        Invocation.method(
          #didChangeDependencies,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didUpdateWidget(_i17.StatefulWidget? oldWidget) => super.noSuchMethod(
        Invocation.method(
          #didUpdateWidget,
          [oldWidget],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void deactivate() => super.noSuchMethod(
        Invocation.method(
          #deactivate,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void activate() => super.noSuchMethod(
        Invocation.method(
          #activate,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i21.Future<T?> pushNamed<T extends Object?>(
    String? routeName, {
    Object? arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushNamed,
          [routeName],
          {#arguments: arguments},
        ),
        returnValue: _i21.Future<T?>.value(),
        returnValueForMissingStub: _i21.Future<T?>.value(),
      ) as _i21.Future<T?>);

  @override
  String restorablePushNamed<T extends Object?>(
    String? routeName, {
    Object? arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #restorablePushNamed,
          [routeName],
          {#arguments: arguments},
        ),
        returnValue: _i30.dummyValue<String>(
          this,
          Invocation.method(
            #restorablePushNamed,
            [routeName],
            {#arguments: arguments},
          ),
        ),
        returnValueForMissingStub: _i30.dummyValue<String>(
          this,
          Invocation.method(
            #restorablePushNamed,
            [routeName],
            {#arguments: arguments},
          ),
        ),
      ) as String);

  @override
  _i21.Future<T?> pushReplacementNamed<T extends Object?, TO extends Object?>(
    String? routeName, {
    TO? result,
    Object? arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushReplacementNamed,
          [routeName],
          {
            #result: result,
            #arguments: arguments,
          },
        ),
        returnValue: _i21.Future<T?>.value(),
        returnValueForMissingStub: _i21.Future<T?>.value(),
      ) as _i21.Future<T?>);

  @override
  String restorablePushReplacementNamed<T extends Object?, TO extends Object?>(
    String? routeName, {
    TO? result,
    Object? arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #restorablePushReplacementNamed,
          [routeName],
          {
            #result: result,
            #arguments: arguments,
          },
        ),
        returnValue: _i30.dummyValue<String>(
          this,
          Invocation.method(
            #restorablePushReplacementNamed,
            [routeName],
            {
              #result: result,
              #arguments: arguments,
            },
          ),
        ),
        returnValueForMissingStub: _i30.dummyValue<String>(
          this,
          Invocation.method(
            #restorablePushReplacementNamed,
            [routeName],
            {
              #result: result,
              #arguments: arguments,
            },
          ),
        ),
      ) as String);

  @override
  _i21.Future<T?> popAndPushNamed<T extends Object?, TO extends Object?>(
    String? routeName, {
    TO? result,
    Object? arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #popAndPushNamed,
          [routeName],
          {
            #result: result,
            #arguments: arguments,
          },
        ),
        returnValue: _i21.Future<T?>.value(),
        returnValueForMissingStub: _i21.Future<T?>.value(),
      ) as _i21.Future<T?>);

  @override
  String restorablePopAndPushNamed<T extends Object?, TO extends Object?>(
    String? routeName, {
    TO? result,
    Object? arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #restorablePopAndPushNamed,
          [routeName],
          {
            #result: result,
            #arguments: arguments,
          },
        ),
        returnValue: _i30.dummyValue<String>(
          this,
          Invocation.method(
            #restorablePopAndPushNamed,
            [routeName],
            {
              #result: result,
              #arguments: arguments,
            },
          ),
        ),
        returnValueForMissingStub: _i30.dummyValue<String>(
          this,
          Invocation.method(
            #restorablePopAndPushNamed,
            [routeName],
            {
              #result: result,
              #arguments: arguments,
            },
          ),
        ),
      ) as String);

  @override
  _i21.Future<T?> pushNamedAndRemoveUntil<T extends Object?>(
    String? newRouteName,
    _i17.RoutePredicate? predicate, {
    Object? arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushNamedAndRemoveUntil,
          [
            newRouteName,
            predicate,
          ],
          {#arguments: arguments},
        ),
        returnValue: _i21.Future<T?>.value(),
        returnValueForMissingStub: _i21.Future<T?>.value(),
      ) as _i21.Future<T?>);

  @override
  String restorablePushNamedAndRemoveUntil<T extends Object?>(
    String? newRouteName,
    _i17.RoutePredicate? predicate, {
    Object? arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #restorablePushNamedAndRemoveUntil,
          [
            newRouteName,
            predicate,
          ],
          {#arguments: arguments},
        ),
        returnValue: _i30.dummyValue<String>(
          this,
          Invocation.method(
            #restorablePushNamedAndRemoveUntil,
            [
              newRouteName,
              predicate,
            ],
            {#arguments: arguments},
          ),
        ),
        returnValueForMissingStub: _i30.dummyValue<String>(
          this,
          Invocation.method(
            #restorablePushNamedAndRemoveUntil,
            [
              newRouteName,
              predicate,
            ],
            {#arguments: arguments},
          ),
        ),
      ) as String);

  @override
  _i21.Future<T?> push<T extends Object?>(_i17.Route<T>? route) =>
      (super.noSuchMethod(
        Invocation.method(
          #push,
          [route],
        ),
        returnValue: _i21.Future<T?>.value(),
        returnValueForMissingStub: _i21.Future<T?>.value(),
      ) as _i21.Future<T?>);

  @override
  String restorablePush<T extends Object?>(
    _i17.RestorableRouteBuilder<T>? routeBuilder, {
    Object? arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #restorablePush,
          [routeBuilder],
          {#arguments: arguments},
        ),
        returnValue: _i30.dummyValue<String>(
          this,
          Invocation.method(
            #restorablePush,
            [routeBuilder],
            {#arguments: arguments},
          ),
        ),
        returnValueForMissingStub: _i30.dummyValue<String>(
          this,
          Invocation.method(
            #restorablePush,
            [routeBuilder],
            {#arguments: arguments},
          ),
        ),
      ) as String);

  @override
  _i21.Future<T?> pushReplacement<T extends Object?, TO extends Object?>(
    _i17.Route<T>? newRoute, {
    TO? result,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushReplacement,
          [newRoute],
          {#result: result},
        ),
        returnValue: _i21.Future<T?>.value(),
        returnValueForMissingStub: _i21.Future<T?>.value(),
      ) as _i21.Future<T?>);

  @override
  String restorablePushReplacement<T extends Object?, TO extends Object?>(
    _i17.RestorableRouteBuilder<T>? routeBuilder, {
    TO? result,
    Object? arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #restorablePushReplacement,
          [routeBuilder],
          {
            #result: result,
            #arguments: arguments,
          },
        ),
        returnValue: _i30.dummyValue<String>(
          this,
          Invocation.method(
            #restorablePushReplacement,
            [routeBuilder],
            {
              #result: result,
              #arguments: arguments,
            },
          ),
        ),
        returnValueForMissingStub: _i30.dummyValue<String>(
          this,
          Invocation.method(
            #restorablePushReplacement,
            [routeBuilder],
            {
              #result: result,
              #arguments: arguments,
            },
          ),
        ),
      ) as String);

  @override
  _i21.Future<T?> pushAndRemoveUntil<T extends Object?>(
    _i17.Route<T>? newRoute,
    _i17.RoutePredicate? predicate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushAndRemoveUntil,
          [
            newRoute,
            predicate,
          ],
        ),
        returnValue: _i21.Future<T?>.value(),
        returnValueForMissingStub: _i21.Future<T?>.value(),
      ) as _i21.Future<T?>);

  @override
  String restorablePushAndRemoveUntil<T extends Object?>(
    _i17.RestorableRouteBuilder<T>? newRouteBuilder,
    _i17.RoutePredicate? predicate, {
    Object? arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #restorablePushAndRemoveUntil,
          [
            newRouteBuilder,
            predicate,
          ],
          {#arguments: arguments},
        ),
        returnValue: _i30.dummyValue<String>(
          this,
          Invocation.method(
            #restorablePushAndRemoveUntil,
            [
              newRouteBuilder,
              predicate,
            ],
            {#arguments: arguments},
          ),
        ),
        returnValueForMissingStub: _i30.dummyValue<String>(
          this,
          Invocation.method(
            #restorablePushAndRemoveUntil,
            [
              newRouteBuilder,
              predicate,
            ],
            {#arguments: arguments},
          ),
        ),
      ) as String);

  @override
  void replace<T extends Object?>({
    required _i17.Route<dynamic>? oldRoute,
    required _i17.Route<T>? newRoute,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #replace,
          [],
          {
            #oldRoute: oldRoute,
            #newRoute: newRoute,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  String restorableReplace<T extends Object?>({
    required _i17.Route<dynamic>? oldRoute,
    required _i17.RestorableRouteBuilder<T>? newRouteBuilder,
    Object? arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #restorableReplace,
          [],
          {
            #oldRoute: oldRoute,
            #newRouteBuilder: newRouteBuilder,
            #arguments: arguments,
          },
        ),
        returnValue: _i30.dummyValue<String>(
          this,
          Invocation.method(
            #restorableReplace,
            [],
            {
              #oldRoute: oldRoute,
              #newRouteBuilder: newRouteBuilder,
              #arguments: arguments,
            },
          ),
        ),
        returnValueForMissingStub: _i30.dummyValue<String>(
          this,
          Invocation.method(
            #restorableReplace,
            [],
            {
              #oldRoute: oldRoute,
              #newRouteBuilder: newRouteBuilder,
              #arguments: arguments,
            },
          ),
        ),
      ) as String);

  @override
  void replaceRouteBelow<T extends Object?>({
    required _i17.Route<dynamic>? anchorRoute,
    required _i17.Route<T>? newRoute,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #replaceRouteBelow,
          [],
          {
            #anchorRoute: anchorRoute,
            #newRoute: newRoute,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  String restorableReplaceRouteBelow<T extends Object?>({
    required _i17.Route<dynamic>? anchorRoute,
    required _i17.RestorableRouteBuilder<T>? newRouteBuilder,
    Object? arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #restorableReplaceRouteBelow,
          [],
          {
            #anchorRoute: anchorRoute,
            #newRouteBuilder: newRouteBuilder,
            #arguments: arguments,
          },
        ),
        returnValue: _i30.dummyValue<String>(
          this,
          Invocation.method(
            #restorableReplaceRouteBelow,
            [],
            {
              #anchorRoute: anchorRoute,
              #newRouteBuilder: newRouteBuilder,
              #arguments: arguments,
            },
          ),
        ),
        returnValueForMissingStub: _i30.dummyValue<String>(
          this,
          Invocation.method(
            #restorableReplaceRouteBelow,
            [],
            {
              #anchorRoute: anchorRoute,
              #newRouteBuilder: newRouteBuilder,
              #arguments: arguments,
            },
          ),
        ),
      ) as String);

  @override
  bool canPop() => (super.noSuchMethod(
        Invocation.method(
          #canPop,
          [],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i21.Future<bool> maybePop<T extends Object?>([T? result]) =>
      (super.noSuchMethod(
        Invocation.method(
          #maybePop,
          [result],
        ),
        returnValue: _i21.Future<bool>.value(false),
        returnValueForMissingStub: _i21.Future<bool>.value(false),
      ) as _i21.Future<bool>);

  @override
  void pop<T extends Object?>([T? result]) => super.noSuchMethod(
        Invocation.method(
          #pop,
          [result],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void popUntil(_i17.RoutePredicate? predicate) => super.noSuchMethod(
        Invocation.method(
          #popUntil,
          [predicate],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeRoute(_i17.Route<dynamic>? route) => super.noSuchMethod(
        Invocation.method(
          #removeRoute,
          [route],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeRouteBelow(_i17.Route<dynamic>? anchorRoute) => super.noSuchMethod(
        Invocation.method(
          #removeRouteBelow,
          [anchorRoute],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void finalizeRoute(_i17.Route<dynamic>? route) => super.noSuchMethod(
        Invocation.method(
          #finalizeRoute,
          [route],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didStartUserGesture() => super.noSuchMethod(
        Invocation.method(
          #didStartUserGesture,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didStopUserGesture() => super.noSuchMethod(
        Invocation.method(
          #didStopUserGesture,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Widget build(_i17.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #build,
          [context],
        ),
        returnValue: _FakeWidget_21(
          this,
          Invocation.method(
            #build,
            [context],
          ),
        ),
        returnValueForMissingStub: _FakeWidget_21(
          this,
          Invocation.method(
            #build,
            [context],
          ),
        ),
      ) as _i17.Widget);

  @override
  void reassemble() => super.noSuchMethod(
        Invocation.method(
          #reassemble,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setState(_i31.VoidCallback? fn) => super.noSuchMethod(
        Invocation.method(
          #setState,
          [fn],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void debugFillProperties(_i18.DiagnosticPropertiesBuilder? properties) =>
      super.noSuchMethod(
        Invocation.method(
          #debugFillProperties,
          [properties],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String toString(
          {_i17.DiagnosticLevel? minLevel = _i17.DiagnosticLevel.info}) =>
      super.toString();

  @override
  String toStringShort() => (super.noSuchMethod(
        Invocation.method(
          #toStringShort,
          [],
        ),
        returnValue: _i30.dummyValue<String>(
          this,
          Invocation.method(
            #toStringShort,
            [],
          ),
        ),
        returnValueForMissingStub: _i30.dummyValue<String>(
          this,
          Invocation.method(
            #toStringShort,
            [],
          ),
        ),
      ) as String);

  @override
  _i17.DiagnosticsNode toDiagnosticsNode({
    String? name,
    _i18.DiagnosticsTreeStyle? style,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toDiagnosticsNode,
          [],
          {
            #name: name,
            #style: style,
          },
        ),
        returnValue: _FakeDiagnosticsNode_22(
          this,
          Invocation.method(
            #toDiagnosticsNode,
            [],
            {
              #name: name,
              #style: style,
            },
          ),
        ),
        returnValueForMissingStub: _FakeDiagnosticsNode_22(
          this,
          Invocation.method(
            #toDiagnosticsNode,
            [],
            {
              #name: name,
              #style: style,
            },
          ),
        ),
      ) as _i17.DiagnosticsNode);

  @override
  _i19.Ticker createTicker(_i19.TickerCallback? onTick) => (super.noSuchMethod(
        Invocation.method(
          #createTicker,
          [onTick],
        ),
        returnValue: _FakeTicker_23(
          this,
          Invocation.method(
            #createTicker,
            [onTick],
          ),
        ),
        returnValueForMissingStub: _FakeTicker_23(
          this,
          Invocation.method(
            #createTicker,
            [onTick],
          ),
        ),
      ) as _i19.Ticker);

  @override
  void registerForRestoration(
    _i17.RestorableProperty<Object?>? property,
    String? restorationId,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #registerForRestoration,
          [
            property,
            restorationId,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterFromRestoration(_i17.RestorableProperty<Object?>? property) =>
      super.noSuchMethod(
        Invocation.method(
          #unregisterFromRestoration,
          [property],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didUpdateRestorationId() => super.noSuchMethod(
        Invocation.method(
          #didUpdateRestorationId,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
