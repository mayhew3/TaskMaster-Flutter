// Mocks generated by Mockito 5.4.4 from annotations
// in taskmaster/test/task_helper_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i16;

import 'package:built_collection/built_collection.dart' as _i5;
import 'package:flutter_local_notifications/flutter_local_notifications.dart'
    as _i9;
import 'package:google_sign_in/google_sign_in.dart' as _i13;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i25;
import 'package:redux/src/store.dart' as _i24;
import 'package:taskmaster/models/data_payload.dart' as _i3;
import 'package:taskmaster/models/models.dart' as _i12;
import 'package:taskmaster/models/snooze.dart' as _i8;
import 'package:taskmaster/models/snooze_blueprint.dart' as _i22;
import 'package:taskmaster/models/sprint.dart' as _i6;
import 'package:taskmaster/models/sprint_assignment.dart' as _i19;
import 'package:taskmaster/models/sprint_blueprint.dart' as _i20;
import 'package:taskmaster/models/task_item.dart' as _i4;
import 'package:taskmaster/models/task_item_blueprint.dart' as _i17;
import 'package:taskmaster/models/task_item_recur_preview.dart' as _i18;
import 'package:taskmaster/models/task_recurrence.dart' as _i7;
import 'package:taskmaster/models/task_recurrence_blueprint.dart' as _i21;
import 'package:taskmaster/models/top_nav_item.dart' as _i11;
import 'package:taskmaster/redux/app_state.dart' as _i14;
import 'package:taskmaster/redux/middleware/notification_helper.dart' as _i26;
import 'package:taskmaster/task_repository.dart' as _i15;
import 'package:taskmaster/timezone_helper.dart' as _i10;
import 'package:taskmaster/typedefs.dart' as _i23;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDataPayload_1 extends _i1.SmartFake implements _i3.DataPayload {
  _FakeDataPayload_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTaskItem_2 extends _i1.SmartFake implements _i4.TaskItem {
  _FakeTaskItem_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBuiltList_3<E> extends _i1.SmartFake implements _i5.BuiltList<E> {
  _FakeBuiltList_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSprint_4 extends _i1.SmartFake implements _i6.Sprint {
  _FakeSprint_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTaskRecurrence_5 extends _i1.SmartFake
    implements _i7.TaskRecurrence {
  _FakeTaskRecurrence_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSnooze_6 extends _i1.SmartFake implements _i8.Snooze {
  _FakeSnooze_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUri_7 extends _i1.SmartFake implements Uri {
  _FakeUri_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFlutterLocalNotificationsPlugin_8 extends _i1.SmartFake
    implements _i9.FlutterLocalNotificationsPlugin {
  _FakeFlutterLocalNotificationsPlugin_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTimezoneHelper_9 extends _i1.SmartFake
    implements _i10.TimezoneHelper {
  _FakeTimezoneHelper_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTopNavItem_10 extends _i1.SmartFake implements _i11.TopNavItem {
  _FakeTopNavItem_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeVisibilityFilter_11 extends _i1.SmartFake
    implements _i12.VisibilityFilter {
  _FakeVisibilityFilter_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGoogleSignIn_12 extends _i1.SmartFake implements _i13.GoogleSignIn {
  _FakeGoogleSignIn_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAppState_13 extends _i1.SmartFake implements _i14.AppState {
  _FakeAppState_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAppStateBuilder_14 extends _i1.SmartFake
    implements _i14.AppStateBuilder {
  _FakeAppStateBuilder_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TaskRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTaskRepository extends _i1.Mock implements _i15.TaskRepository {
  @override
  _i2.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
        returnValueForMissingStub: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Client);

  @override
  set client(_i2.Client? _client) => super.noSuchMethod(
        Invocation.setter(
          #client,
          _client,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i16.Future<int?> getPersonId(
    String? email,
    String? idToken,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPersonId,
          [
            email,
            idToken,
          ],
        ),
        returnValue: _i16.Future<int?>.value(),
        returnValueForMissingStub: _i16.Future<int?>.value(),
      ) as _i16.Future<int?>);

  @override
  _i16.Future<_i3.DataPayload> loadTasks(
    int? personId,
    String? idToken,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadTasks,
          [
            personId,
            idToken,
          ],
        ),
        returnValue: _i16.Future<_i3.DataPayload>.value(_FakeDataPayload_1(
          this,
          Invocation.method(
            #loadTasks,
            [
              personId,
              idToken,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i3.DataPayload>.value(_FakeDataPayload_1(
          this,
          Invocation.method(
            #loadTasks,
            [
              personId,
              idToken,
            ],
          ),
        )),
      ) as _i16.Future<_i3.DataPayload>);

  @override
  _i16.Future<
      ({_i7.TaskRecurrence? recurrence, _i4.TaskItem taskItem})> addTask(
    _i17.TaskItemBlueprint? blueprint,
    String? idToken,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTask,
          [
            blueprint,
            idToken,
          ],
        ),
        returnValue: _i16.Future<
            ({_i7.TaskRecurrence? recurrence, _i4.TaskItem taskItem})>.value((
          recurrence: null,
          taskItem: _FakeTaskItem_2(
            this,
            Invocation.method(
              #addTask,
              [
                blueprint,
                idToken,
              ],
            ),
          )
        )),
        returnValueForMissingStub: _i16.Future<
            ({_i7.TaskRecurrence? recurrence, _i4.TaskItem taskItem})>.value((
          recurrence: null,
          taskItem: _FakeTaskItem_2(
            this,
            Invocation.method(
              #addTask,
              [
                blueprint,
                idToken,
              ],
            ),
          )
        )),
      ) as _i16
          .Future<({_i7.TaskRecurrence? recurrence, _i4.TaskItem taskItem})>);

  @override
  _i16.Future<
      ({_i7.TaskRecurrence? recurrence, _i4.TaskItem taskItem})> addRecurTask(
    _i18.TaskItemRecurPreview? blueprint,
    String? idToken,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addRecurTask,
          [
            blueprint,
            idToken,
          ],
        ),
        returnValue: _i16.Future<
            ({_i7.TaskRecurrence? recurrence, _i4.TaskItem taskItem})>.value((
          recurrence: null,
          taskItem: _FakeTaskItem_2(
            this,
            Invocation.method(
              #addRecurTask,
              [
                blueprint,
                idToken,
              ],
            ),
          )
        )),
        returnValueForMissingStub: _i16.Future<
            ({_i7.TaskRecurrence? recurrence, _i4.TaskItem taskItem})>.value((
          recurrence: null,
          taskItem: _FakeTaskItem_2(
            this,
            Invocation.method(
              #addRecurTask,
              [
                blueprint,
                idToken,
              ],
            ),
          )
        )),
      ) as _i16
          .Future<({_i7.TaskRecurrence? recurrence, _i4.TaskItem taskItem})>);

  @override
  _i16.Future<
      ({_i7.TaskRecurrence? recurrence, _i4.TaskItem taskItem})> updateTask(
    int? taskItemId,
    _i17.TaskItemBlueprint? taskItemBlueprint,
    String? idToken,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTask,
          [
            taskItemId,
            taskItemBlueprint,
            idToken,
          ],
        ),
        returnValue: _i16.Future<
            ({_i7.TaskRecurrence? recurrence, _i4.TaskItem taskItem})>.value((
          recurrence: null,
          taskItem: _FakeTaskItem_2(
            this,
            Invocation.method(
              #updateTask,
              [
                taskItemId,
                taskItemBlueprint,
                idToken,
              ],
            ),
          )
        )),
        returnValueForMissingStub: _i16.Future<
            ({_i7.TaskRecurrence? recurrence, _i4.TaskItem taskItem})>.value((
          recurrence: null,
          taskItem: _FakeTaskItem_2(
            this,
            Invocation.method(
              #updateTask,
              [
                taskItemId,
                taskItemBlueprint,
                idToken,
              ],
            ),
          )
        )),
      ) as _i16
          .Future<({_i7.TaskRecurrence? recurrence, _i4.TaskItem taskItem})>);

  @override
  _i16.Future<
      ({
        _i5.BuiltList<_i4.TaskItem> addedTasks,
        _i6.Sprint sprint,
        _i5.BuiltList<_i19.SprintAssignment> sprintAssignments
      })> addSprintWithTaskItems(
    _i20.SprintBlueprint? blueprint,
    _i5.BuiltList<_i4.TaskItem>? existingItems,
    _i5.BuiltList<_i18.TaskItemRecurPreview>? newItems,
    String? idToken,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSprintWithTaskItems,
          [
            blueprint,
            existingItems,
            newItems,
            idToken,
          ],
        ),
        returnValue: _i16.Future<
            ({
              _i5.BuiltList<_i4.TaskItem> addedTasks,
              _i6.Sprint sprint,
              _i5.BuiltList<_i19.SprintAssignment> sprintAssignments
            })>.value((
          addedTasks: _FakeBuiltList_3<_i4.TaskItem>(
            this,
            Invocation.method(
              #addSprintWithTaskItems,
              [
                blueprint,
                existingItems,
                newItems,
                idToken,
              ],
            ),
          ),
          sprint: _FakeSprint_4(
            this,
            Invocation.method(
              #addSprintWithTaskItems,
              [
                blueprint,
                existingItems,
                newItems,
                idToken,
              ],
            ),
          ),
          sprintAssignments: _FakeBuiltList_3<_i19.SprintAssignment>(
            this,
            Invocation.method(
              #addSprintWithTaskItems,
              [
                blueprint,
                existingItems,
                newItems,
                idToken,
              ],
            ),
          )
        )),
        returnValueForMissingStub: _i16.Future<
            ({
              _i5.BuiltList<_i4.TaskItem> addedTasks,
              _i6.Sprint sprint,
              _i5.BuiltList<_i19.SprintAssignment> sprintAssignments
            })>.value((
          addedTasks: _FakeBuiltList_3<_i4.TaskItem>(
            this,
            Invocation.method(
              #addSprintWithTaskItems,
              [
                blueprint,
                existingItems,
                newItems,
                idToken,
              ],
            ),
          ),
          sprint: _FakeSprint_4(
            this,
            Invocation.method(
              #addSprintWithTaskItems,
              [
                blueprint,
                existingItems,
                newItems,
                idToken,
              ],
            ),
          ),
          sprintAssignments: _FakeBuiltList_3<_i19.SprintAssignment>(
            this,
            Invocation.method(
              #addSprintWithTaskItems,
              [
                blueprint,
                existingItems,
                newItems,
                idToken,
              ],
            ),
          )
        )),
      ) as _i16.Future<
          ({
            _i5.BuiltList<_i4.TaskItem> addedTasks,
            _i6.Sprint sprint,
            _i5.BuiltList<_i19.SprintAssignment> sprintAssignments
          })>);

  @override
  _i16.Future<_i7.TaskRecurrence> addTaskRecurrence(
    _i21.TaskRecurrenceBlueprint? blueprint,
    String? idToken,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTaskRecurrence,
          [
            blueprint,
            idToken,
          ],
        ),
        returnValue:
            _i16.Future<_i7.TaskRecurrence>.value(_FakeTaskRecurrence_5(
          this,
          Invocation.method(
            #addTaskRecurrence,
            [
              blueprint,
              idToken,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i7.TaskRecurrence>.value(_FakeTaskRecurrence_5(
          this,
          Invocation.method(
            #addTaskRecurrence,
            [
              blueprint,
              idToken,
            ],
          ),
        )),
      ) as _i16.Future<_i7.TaskRecurrence>);

  @override
  _i16.Future<_i7.TaskRecurrence> updateTaskRecurrence(
    int? taskRecurrenceId,
    _i21.TaskRecurrenceBlueprint? blueprint,
    String? idToken,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTaskRecurrence,
          [
            taskRecurrenceId,
            blueprint,
            idToken,
          ],
        ),
        returnValue:
            _i16.Future<_i7.TaskRecurrence>.value(_FakeTaskRecurrence_5(
          this,
          Invocation.method(
            #updateTaskRecurrence,
            [
              taskRecurrenceId,
              blueprint,
              idToken,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i7.TaskRecurrence>.value(_FakeTaskRecurrence_5(
          this,
          Invocation.method(
            #updateTaskRecurrence,
            [
              taskRecurrenceId,
              blueprint,
              idToken,
            ],
          ),
        )),
      ) as _i16.Future<_i7.TaskRecurrence>);

  @override
  _i16.Future<
      ({
        _i5.BuiltList<_i4.TaskItem> addedTasks,
        _i5.BuiltList<_i19.SprintAssignment> sprintAssignments
      })> addTasksToSprint(
    _i5.BuiltList<_i4.TaskItem>? taskItems,
    _i5.BuiltList<_i18.TaskItemRecurPreview>? taskItemRecurPreviews,
    _i6.Sprint? sprint,
    String? idToken,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTasksToSprint,
          [
            taskItems,
            taskItemRecurPreviews,
            sprint,
            idToken,
          ],
        ),
        returnValue: _i16.Future<
            ({
              _i5.BuiltList<_i4.TaskItem> addedTasks,
              _i5.BuiltList<_i19.SprintAssignment> sprintAssignments
            })>.value((
          addedTasks: _FakeBuiltList_3<_i4.TaskItem>(
            this,
            Invocation.method(
              #addTasksToSprint,
              [
                taskItems,
                taskItemRecurPreviews,
                sprint,
                idToken,
              ],
            ),
          ),
          sprintAssignments: _FakeBuiltList_3<_i19.SprintAssignment>(
            this,
            Invocation.method(
              #addTasksToSprint,
              [
                taskItems,
                taskItemRecurPreviews,
                sprint,
                idToken,
              ],
            ),
          )
        )),
        returnValueForMissingStub: _i16.Future<
            ({
              _i5.BuiltList<_i4.TaskItem> addedTasks,
              _i5.BuiltList<_i19.SprintAssignment> sprintAssignments
            })>.value((
          addedTasks: _FakeBuiltList_3<_i4.TaskItem>(
            this,
            Invocation.method(
              #addTasksToSprint,
              [
                taskItems,
                taskItemRecurPreviews,
                sprint,
                idToken,
              ],
            ),
          ),
          sprintAssignments: _FakeBuiltList_3<_i19.SprintAssignment>(
            this,
            Invocation.method(
              #addTasksToSprint,
              [
                taskItems,
                taskItemRecurPreviews,
                sprint,
                idToken,
              ],
            ),
          )
        )),
      ) as _i16.Future<
          ({
            _i5.BuiltList<_i4.TaskItem> addedTasks,
            _i5.BuiltList<_i19.SprintAssignment> sprintAssignments
          })>);

  @override
  _i16.Future<void> deleteTask(
    _i4.TaskItem? taskItem,
    String? idToken,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTask,
          [
            taskItem,
            idToken,
          ],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<_i8.Snooze> addSnooze(
    _i22.SnoozeBlueprint? snooze,
    String? idToken,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSnooze,
          [
            snooze,
            idToken,
          ],
        ),
        returnValue: _i16.Future<_i8.Snooze>.value(_FakeSnooze_6(
          this,
          Invocation.method(
            #addSnooze,
            [
              snooze,
              idToken,
            ],
          ),
        )),
        returnValueForMissingStub: _i16.Future<_i8.Snooze>.value(_FakeSnooze_6(
          this,
          Invocation.method(
            #addSnooze,
            [
              snooze,
              idToken,
            ],
          ),
        )),
      ) as _i16.Future<_i8.Snooze>);

  @override
  Uri getUriWithParameters(
    String? path,
    Map<String, dynamic>? queryParameters,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUriWithParameters,
          [
            path,
            queryParameters,
          ],
        ),
        returnValue: _FakeUri_7(
          this,
          Invocation.method(
            #getUriWithParameters,
            [
              path,
              queryParameters,
            ],
          ),
        ),
        returnValueForMissingStub: _FakeUri_7(
          this,
          Invocation.method(
            #getUriWithParameters,
            [
              path,
              queryParameters,
            ],
          ),
        ),
      ) as Uri);

  @override
  Uri getUri(String? path) => (super.noSuchMethod(
        Invocation.method(
          #getUri,
          [path],
        ),
        returnValue: _FakeUri_7(
          this,
          Invocation.method(
            #getUri,
            [path],
          ),
        ),
        returnValueForMissingStub: _FakeUri_7(
          this,
          Invocation.method(
            #getUri,
            [path],
          ),
        ),
      ) as Uri);

  @override
  _i16.Future<dynamic> executeGetApiAction({
    required String? uriString,
    Map<String, Object>? queryParameters,
    required String? idToken,
    required String? operationDescription,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #executeGetApiAction,
          [],
          {
            #uriString: uriString,
            #queryParameters: queryParameters,
            #idToken: idToken,
            #operationDescription: operationDescription,
          },
        ),
        returnValue: _i16.Future<dynamic>.value(),
        returnValueForMissingStub: _i16.Future<dynamic>.value(),
      ) as _i16.Future<dynamic>);

  @override
  _i16.Future<dynamic> executeBodyApiAction({
    required _i23.BodyApiOperation? bodyApiOperation,
    required Map<String, Object?>? payload,
    required String? uriString,
    Map<String, Object>? queryParameters,
    required String? idToken,
    required String? operationDescription,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #executeBodyApiAction,
          [],
          {
            #bodyApiOperation: bodyApiOperation,
            #payload: payload,
            #uriString: uriString,
            #queryParameters: queryParameters,
            #idToken: idToken,
            #operationDescription: operationDescription,
          },
        ),
        returnValue: _i16.Future<dynamic>.value(),
        returnValueForMissingStub: _i16.Future<dynamic>.value(),
      ) as _i16.Future<dynamic>);

  @override
  _i16.Future<void> executeDeleteApiAction({
    required String? uriString,
    Map<String, Object>? queryParameters,
    required String? idToken,
    required String? operationDescription,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #executeDeleteApiAction,
          [],
          {
            #uriString: uriString,
            #queryParameters: queryParameters,
            #idToken: idToken,
            #operationDescription: operationDescription,
          },
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);
}

/// A class which mocks [Store].
///
/// See the documentation for Mockito's code generation for more information.
class MockStore<State> extends _i1.Mock implements _i24.Store<State> {
  @override
  _i24.Reducer<State> get reducer => (super.noSuchMethod(
        Invocation.getter(#reducer),
        returnValue: (
          State state,
          dynamic action,
        ) =>
            _i25.dummyValue<State>(
          this,
          Invocation.getter(#reducer),
        ),
        returnValueForMissingStub: (
          State state,
          dynamic action,
        ) =>
            _i25.dummyValue<State>(
          this,
          Invocation.getter(#reducer),
        ),
      ) as _i24.Reducer<State>);

  @override
  set reducer(_i24.Reducer<State>? _reducer) => super.noSuchMethod(
        Invocation.setter(
          #reducer,
          _reducer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  State get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i25.dummyValue<State>(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _i25.dummyValue<State>(
          this,
          Invocation.getter(#state),
        ),
      ) as State);

  @override
  _i16.Stream<State> get onChange => (super.noSuchMethod(
        Invocation.getter(#onChange),
        returnValue: _i16.Stream<State>.empty(),
        returnValueForMissingStub: _i16.Stream<State>.empty(),
      ) as _i16.Stream<State>);

  @override
  _i16.Future<dynamic> teardown() => (super.noSuchMethod(
        Invocation.method(
          #teardown,
          [],
        ),
        returnValue: _i16.Future<dynamic>.value(),
        returnValueForMissingStub: _i16.Future<dynamic>.value(),
      ) as _i16.Future<dynamic>);
}

/// A class which mocks [NotificationHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationHelper extends _i1.Mock
    implements _i26.NotificationHelper {
  @override
  int get nextId => (super.noSuchMethod(
        Invocation.getter(#nextId),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  set nextId(int? _nextId) => super.noSuchMethod(
        Invocation.setter(
          #nextId,
          _nextId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.FlutterLocalNotificationsPlugin get plugin => (super.noSuchMethod(
        Invocation.getter(#plugin),
        returnValue: _FakeFlutterLocalNotificationsPlugin_8(
          this,
          Invocation.getter(#plugin),
        ),
        returnValueForMissingStub: _FakeFlutterLocalNotificationsPlugin_8(
          this,
          Invocation.getter(#plugin),
        ),
      ) as _i9.FlutterLocalNotificationsPlugin);

  @override
  _i10.TimezoneHelper get timezoneHelper => (super.noSuchMethod(
        Invocation.getter(#timezoneHelper),
        returnValue: _FakeTimezoneHelper_9(
          this,
          Invocation.getter(#timezoneHelper),
        ),
        returnValueForMissingStub: _FakeTimezoneHelper_9(
          this,
          Invocation.getter(#timezoneHelper),
        ),
      ) as _i10.TimezoneHelper);

  @override
  _i16.Future<void> cancelAllNotifications() => (super.noSuchMethod(
        Invocation.method(
          #cancelAllNotifications,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> cancelNotificationsForTaskId(int? taskId) =>
      (super.noSuchMethod(
        Invocation.method(
          #cancelNotificationsForTaskId,
          [taskId],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> syncNotificationForTasksAndSprint(
    List<_i4.TaskItem>? taskItems,
    _i6.Sprint? sprint,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #syncNotificationForTasksAndSprint,
          [
            taskItems,
            sprint,
          ],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> updateNotificationForTask(_i4.TaskItem? taskItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateNotificationForTask,
          [taskItem],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);
}

/// A class which mocks [AppState].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppState extends _i1.Mock implements _i14.AppState {
  @override
  _i5.BuiltList<_i4.TaskItem> get taskItems => (super.noSuchMethod(
        Invocation.getter(#taskItems),
        returnValue: _FakeBuiltList_3<_i4.TaskItem>(
          this,
          Invocation.getter(#taskItems),
        ),
        returnValueForMissingStub: _FakeBuiltList_3<_i4.TaskItem>(
          this,
          Invocation.getter(#taskItems),
        ),
      ) as _i5.BuiltList<_i4.TaskItem>);

  @override
  _i5.BuiltList<_i6.Sprint> get sprints => (super.noSuchMethod(
        Invocation.getter(#sprints),
        returnValue: _FakeBuiltList_3<_i6.Sprint>(
          this,
          Invocation.getter(#sprints),
        ),
        returnValueForMissingStub: _FakeBuiltList_3<_i6.Sprint>(
          this,
          Invocation.getter(#sprints),
        ),
      ) as _i5.BuiltList<_i6.Sprint>);

  @override
  _i5.BuiltList<_i7.TaskRecurrence> get taskRecurrences => (super.noSuchMethod(
        Invocation.getter(#taskRecurrences),
        returnValue: _FakeBuiltList_3<_i7.TaskRecurrence>(
          this,
          Invocation.getter(#taskRecurrences),
        ),
        returnValueForMissingStub: _FakeBuiltList_3<_i7.TaskRecurrence>(
          this,
          Invocation.getter(#taskRecurrences),
        ),
      ) as _i5.BuiltList<_i7.TaskRecurrence>);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get loadFailed => (super.noSuchMethod(
        Invocation.getter(#loadFailed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i5.BuiltList<_i4.TaskItem> get recentlyCompleted => (super.noSuchMethod(
        Invocation.getter(#recentlyCompleted),
        returnValue: _FakeBuiltList_3<_i4.TaskItem>(
          this,
          Invocation.getter(#recentlyCompleted),
        ),
        returnValueForMissingStub: _FakeBuiltList_3<_i4.TaskItem>(
          this,
          Invocation.getter(#recentlyCompleted),
        ),
      ) as _i5.BuiltList<_i4.TaskItem>);

  @override
  _i11.TopNavItem get activeTab => (super.noSuchMethod(
        Invocation.getter(#activeTab),
        returnValue: _FakeTopNavItem_10(
          this,
          Invocation.getter(#activeTab),
        ),
        returnValueForMissingStub: _FakeTopNavItem_10(
          this,
          Invocation.getter(#activeTab),
        ),
      ) as _i11.TopNavItem);

  @override
  _i5.BuiltList<_i11.TopNavItem> get allNavItems => (super.noSuchMethod(
        Invocation.getter(#allNavItems),
        returnValue: _FakeBuiltList_3<_i11.TopNavItem>(
          this,
          Invocation.getter(#allNavItems),
        ),
        returnValueForMissingStub: _FakeBuiltList_3<_i11.TopNavItem>(
          this,
          Invocation.getter(#allNavItems),
        ),
      ) as _i5.BuiltList<_i11.TopNavItem>);

  @override
  _i12.VisibilityFilter get sprintListFilter => (super.noSuchMethod(
        Invocation.getter(#sprintListFilter),
        returnValue: _FakeVisibilityFilter_11(
          this,
          Invocation.getter(#sprintListFilter),
        ),
        returnValueForMissingStub: _FakeVisibilityFilter_11(
          this,
          Invocation.getter(#sprintListFilter),
        ),
      ) as _i12.VisibilityFilter);

  @override
  _i12.VisibilityFilter get taskListFilter => (super.noSuchMethod(
        Invocation.getter(#taskListFilter),
        returnValue: _FakeVisibilityFilter_11(
          this,
          Invocation.getter(#taskListFilter),
        ),
        returnValueForMissingStub: _FakeVisibilityFilter_11(
          this,
          Invocation.getter(#taskListFilter),
        ),
      ) as _i12.VisibilityFilter);

  @override
  _i13.GoogleSignIn get googleSignIn => (super.noSuchMethod(
        Invocation.getter(#googleSignIn),
        returnValue: _FakeGoogleSignIn_12(
          this,
          Invocation.getter(#googleSignIn),
        ),
        returnValueForMissingStub: _FakeGoogleSignIn_12(
          this,
          Invocation.getter(#googleSignIn),
        ),
      ) as _i13.GoogleSignIn);

  @override
  bool get tokenRetrieved => (super.noSuchMethod(
        Invocation.getter(#tokenRetrieved),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i10.TimezoneHelper get timezoneHelper => (super.noSuchMethod(
        Invocation.getter(#timezoneHelper),
        returnValue: _FakeTimezoneHelper_9(
          this,
          Invocation.getter(#timezoneHelper),
        ),
        returnValueForMissingStub: _FakeTimezoneHelper_9(
          this,
          Invocation.getter(#timezoneHelper),
        ),
      ) as _i10.TimezoneHelper);

  @override
  int get nextId => (super.noSuchMethod(
        Invocation.getter(#nextId),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  _i9.FlutterLocalNotificationsPlugin get flutterLocalNotificationsPlugin =>
      (super.noSuchMethod(
        Invocation.getter(#flutterLocalNotificationsPlugin),
        returnValue: _FakeFlutterLocalNotificationsPlugin_8(
          this,
          Invocation.getter(#flutterLocalNotificationsPlugin),
        ),
        returnValueForMissingStub: _FakeFlutterLocalNotificationsPlugin_8(
          this,
          Invocation.getter(#flutterLocalNotificationsPlugin),
        ),
      ) as _i9.FlutterLocalNotificationsPlugin);

  @override
  _i16.Future<String?> getIdToken() => (super.noSuchMethod(
        Invocation.method(
          #getIdToken,
          [],
        ),
        returnValue: _i16.Future<String?>.value(),
        returnValueForMissingStub: _i16.Future<String?>.value(),
      ) as _i16.Future<String?>);

  @override
  bool isAuthenticated() => (super.noSuchMethod(
        Invocation.method(
          #isAuthenticated,
          [],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool appIsReady() => (super.noSuchMethod(
        Invocation.method(
          #appIsReady,
          [],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i14.AppState rebuild(dynamic Function(_i14.AppStateBuilder)? updates) =>
      (super.noSuchMethod(
        Invocation.method(
          #rebuild,
          [updates],
        ),
        returnValue: _FakeAppState_13(
          this,
          Invocation.method(
            #rebuild,
            [updates],
          ),
        ),
        returnValueForMissingStub: _FakeAppState_13(
          this,
          Invocation.method(
            #rebuild,
            [updates],
          ),
        ),
      ) as _i14.AppState);

  @override
  _i14.AppStateBuilder toBuilder() => (super.noSuchMethod(
        Invocation.method(
          #toBuilder,
          [],
        ),
        returnValue: _FakeAppStateBuilder_14(
          this,
          Invocation.method(
            #toBuilder,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeAppStateBuilder_14(
          this,
          Invocation.method(
            #toBuilder,
            [],
          ),
        ),
      ) as _i14.AppStateBuilder);
}
